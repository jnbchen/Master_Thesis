% Script multiD_GUI
%
% The script multiD_GUI is part of the MATLAB toolbox Gait-CAD. 
% Copyright (C) 2010  [Ralf Mikut, Tobias Loose, Ole Burmeister, Sebastian Braun, Andreas Bartschat, Johannes Stegmaier, Markus Reischl]


% Last file change: 26-Nov-2014 11:56:00
% 
% This program is free software; you can redistribute it and/or modify,
% it under the terms of the GNU General Public License as published by 
% the Free Software Foundation; either version 2 of the License, or any later version.
% 
% This program is distributed in the hope that it will be useful, but
% WITHOUT ANY WARRANTY; without even the implied warranty of 
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
% 
% You should have received a copy of the GNU General Public License along with this program;
% if not, write to the Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110, USA.
% 
% You will find further information about Gait-CAD in the manual or in the following conference paper:
% 
% MIKUT, R.; BURMEISTER, O.; BRAUN, S.; REISCHL, M.: The Open Source Matlab Toolbox Gait-CAD and its Application to Bioelectric Signal Processing.  
% In:  Proc., DGBMT-Workshop Biosignal processing, Potsdam, pp. 109-111; 2008 
% Online available: https://sourceforge.net/projects/gait-cad/files/mikut08biosig_gaitcad.pdf/download
% 
% Please refer to this paper, if you use Gait-CAD for your scientific work.

clear eingabe

if isfield(kp,'gitter_start')
   eingabe.tupel_end = min(kp.gitter_start-1,size(d,1));
else
   eingabe.tupel_end = size(d,1);
end;

local_regression_plot_d       = regr_plot.d_without_norm_and_aggregation;
local_var_bez                 = regr_single.merkmalsextraktion.var_bez_without_norm_and_aggregation;

Abstand=30;

xlu=200;	% x-Koord. des Hauptfensters, links unten
ylu=200;
xb=350;		% Ausdehnung des Fensters in x-Richtung
yb=(size(local_regression_plot_d,2)+3)*Abstand;		% Ausdehnung des Fensters in y-Richtung
%yb=370-size(d,2)*30;
%Hauptfenster öffnen
if isfield(parameter.allgemein,'twodprojektion') &&  parameter.allgemein.twodprojektion>0 && ishandle(parameter.allgemein.twodprojektion) && ~isempty(strfind(get(2,'name'),'2D Projection'))
   close(parameter.allgemein.twodprojektion);
   parameter.allgemein.twodprojektion = 0;
end;

hauptfenster = figure('Units','points', ...
   'Color',[0.8 0.8 0.8], ...
   'PaperPosition',[10 10 576 432], ...
   'PaperUnits','points', ...
   'Position',[xlu ylu xb yb], ...
   'Tag','Fig1',...
   'numbertitle','off',...
   'ToolBar','none',...
   'Menubar','None');
set(hauptfenster,'name',sprintf('%d: 2D projection',get_figure_number(hauptfenster)));
standardcolor_box = 0.8039;

parameter.allgemein.twodprojektion = hauptfenster;

% Koordinaten festlegen
posoben=(size(local_regression_plot_d,2)+2)*Abstand;
HoeheText=10;
BreiteText=150;			% Für Spalten ohne Listbox
Breite_Listbox=170;		% Für Spalten mit Listbox
Breite_Listbox2=150;
Hoehe_Listbox=60;
Abstand=30;					% Abstand zwischen den Spalten
displacement_text = 3;

posDaten=[Abstand posoben];
sizeDaten=[BreiteText HoeheText];
posInfo=posoben-9*sizeDaten(2);

i_ui = 1;

ui(i_ui) = uicontrol('Parent',hauptfenster, ...						% Schriftzug Variablen
   'Units','points', ...
   'BackgroundColor',standardcolor_box * [1 1 1], ...
   'ListboxTop',0, ...
   'Position',[posDaten(1) posDaten(2) sizeDaten(1) 1.5*sizeDaten(2)], ...
   'String','List of variables:', ...
   'Style','text', ...
   'horizontalalignment','left',...
   'Tag','Text8');
i_ui = i_ui + 1;

ui(i_ui) = uicontrol('Parent',hauptfenster, ...						% Schriftzug Min
   'Units','points', ...
   'BackgroundColor',standardcolor_box * [1 1 1], ...
   'ListboxTop',0, ...
   'Position',[posDaten(1)+150 posDaten(2) sizeDaten(1) 1.5*sizeDaten(2)], ...
   'String','Min:', ...
   'Style','text', ...
   'horizontalalignment','left',...
   'Tag','Text8');
i_ui = i_ui + 1;

ui(i_ui) = uicontrol('Parent',hauptfenster, ...						% Schriftzug Med
   'Units','points', ...
   'BackgroundColor',standardcolor_box * [1 1 1], ...
   'ListboxTop',0, ...
   'Position',[posDaten(1)+200 posDaten(2) sizeDaten(1) 1.5*sizeDaten(2)], ...
   'String','Median:', ...
   'Style','text', ...
   'horizontalalignment','left',...
   'Tag','Text8');
i_ui = i_ui + 1;

ui(i_ui) = uicontrol('Parent',hauptfenster, ...						% Schriftzug Max
   'Units','points', ...
   'BackgroundColor',standardcolor_box * [1 1 1], ...
   'ListboxTop',0, ...
   'Position',[posDaten(1)+250 posDaten(2) sizeDaten(1) 1.5*sizeDaten(2)], ...
   'String','Max:', ...
   'Style','text', ...
   'horizontalalignment','left',...
   'Tag','Text8');
i_ui = i_ui + 1;



for i_parx = 1:size(local_regression_plot_d,2)
   switch i_parx
      case 1
         inhalt_string = 'x';
         strEnab = 'off';         
      case 2
         inhalt_string = 'y';
         strEnab = 'off';         
      otherwise
         inhalt_string = round(mean(local_regression_plot_d(1:eingabe.tupel_end,i_parx)));
         strEnab = 'on';
   end;
   
   ui(i_ui) = uicontrol('Parent',hauptfenster, ...     %Variablen name
      'Units','points', ...
      'BackgroundColor',standardcolor_box * [1 1 1], ...
      'ListboxTop',0, ...
      'Position',[posDaten(1)+50 posDaten(2)-Abstand*i_parx+displacement_text sizeDaten(1) sizeDaten(2)], ...
      'String',local_var_bez(i_parx,:), ...
      'Style','text', ...
      'horizontalalignment','left',...
      'Tag',num2str(i_parx));
   i_ui = i_ui + 1;
   
   ui(i_ui) = uicontrol('Units','points', ...      % edit variable
      'BackgroundColor',[1 1 1], ...
      'ListboxTop',0, ...
      'Position',[posDaten(1) posDaten(2)-Abstand*i_parx sizeDaten(1)/4 1.5*sizeDaten(2)], ...
      'String',inhalt_string, ...
      'Style','edit', ...
      'callback','callback_multiD_GUI_handling(ui);',...
      'horizontalalignment','left',...
      'Tag',num2str(i_parx));
   i_ui = i_ui + 1;
   
   ui(i_ui) = uicontrol('Units','points', ...      %edit min
      'BackgroundColor',[1 1 1], ...
      'ListboxTop',0, ...
      'Position',[posDaten(1)+150 posDaten(2)-Abstand*i_parx sizeDaten(1)/4 1.5*sizeDaten(2)], ...
      'String',min(local_regression_plot_d(1:eingabe.tupel_end,i_parx)), ...
      'Style','edit', ...
      'horizontalalignment','left',...
      'Tag',num2str(i_parx));
   i_ui = i_ui + 1;
      
   ui(i_ui) = uicontrol('Units','points', ...      %edit max
      'BackgroundColor',[1 1 1], ...
      'ListboxTop',0, ...
      'Position',[posDaten(1)+250 posDaten(2)-Abstand*i_parx sizeDaten(1)/4 1.5*sizeDaten(2)], ...
      'String',max(local_regression_plot_d(1:eingabe.tupel_end,i_parx)), ...
      'Style','edit', ...
      'horizontalalignment','left',...
      'Tag',num2str(i_parx));
   i_ui = i_ui + 1;
   
   ui(i_ui) = uicontrol('Parent',hauptfenster, ...	% Median
      'Units','points', ...
      'BackgroundColor',standardcolor_box * [1 1 1], ...
      'ListboxTop',0, ...
      'Position',[posDaten(1)+200 posDaten(2)-Abstand*i_parx-displacement_text sizeDaten(1)/3 1.5*sizeDaten(2)], ...
      'String',median(local_regression_plot_d(1:eingabe.tupel_end,i_parx)), ...
      'Style','text', ...
      'horizontalalignment','left',...
      'Tag',num2str(i_parx));
   i_ui = i_ui + 1;
end;

% Pushbutton
ui(i_ui) = uicontrol('Parent',hauptfenster, ...
   'Units','points', ...
   'BackgroundColor',standardcolor_box * [1 1 1], ...
   'ListboxTop',0, ...
   'Position',[posDaten(1) posDaten(2)-(size(local_regression_plot_d,2)+1)*Abstand sizeDaten(1) 1.5*sizeDaten(2)], ...
   'String','Generate', ...
   'Style','pushbutton', ...
   'horizontalalignment','left',...
   'Callback','callback_multiD_GUI', ...
   'Tag','Text8');

%clean up
clear  BreiteText Breite_Listbox  Breite_Listbox2   HoeheText  Hoehe_Listbox hauptfenster i_parx posDaten Abstand sizeDaten standardcolor_box
clear displacement_text xlu ylu xb yb pos_oben posInfo i_ui